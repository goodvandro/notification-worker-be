version: '3'

networks:
  notification-worker-nt:
    name: notification-worker-nt
    driver: bridge

services:
  db:
    image: mongo
    container_name: notification-worker-db
    restart: unless-stopped
    env_file: ./.env
    ports:
      - "${DB_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${DB_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${DB_PASS}"
    networks:
      - notification-worker-nt
    volumes:
      - mongo-data:/data:/data/db

  redis:
    image: redis:6-alpine
    restart: unless-stopped
    container_name: notification-worker-redis
    env_file: ./.env
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - notification-worker-nt

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    container_name: notification-worker-mq
    env_file: ./.env
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_PORT2}:15672"
    networks:
      - notification-worker-nt
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
  
  be:
    build:
      context: .
    container_name: notification-worker-be
    env_file: ./.env
    ports:
      - "${WEB_SERVER_PORT}:3001"
    networks:
      - notification-worker-nt
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - WEB_SERVER_PORT=${WEB_SERVER_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=27017
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_URI=${RABBITMQ_URI}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
    depends_on:
      - db
      - redis
      - rabbitmq
    command: >
      sh -c "/usr/local/bin/wait-for-rabbit.sh ${RABBITMQ_HOST} ${RABBITMQ_PORT} && \
             /usr/local/bin/wait-for-redis.sh ${REDIS_HOST} ${REDIS_PORT} && \
             npm run start:dev"

  worker:
    build: .
    container_name: notification-worker-wk
    env_file: ./.env
    networks:
      - notification-worker-nt
    volumes:
      - .:/app
    environment:
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=27017
      - DB_NAME=${DB_NAME}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - RABBITMQ_URI=${RABBITMQ_URI}
      - RABBITMQ_QUEUE=${RABBITMQ_QUEUE}
    depends_on:
      - db
      - redis
      - rabbitmq
    command: >
      sh -c "/usr/local/bin/wait-for-rabbit.sh ${RABBITMQ_HOST} ${RABBITMQ_PORT} && \
             /usr/local/bin/wait-for-redis.sh ${REDIS_HOST} ${REDIS_PORT} && \
             npm run start:dev:microservice"

volumes:
  mongo-data:
    name: notification-worker-db-data
  rabbitmq-data:
    name: notification-worker-mq-data